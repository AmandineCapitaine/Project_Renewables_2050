$OnText
French power sector financial modelling for only renewable energies as supply technologies (Offshore and Onshore wind, PV, Hydroelectricity and biogas)
and Battery and PHS (pumped hydro storage) as storage technologies,including primary and secondary reserve requirements for meteo and electricity consumption data of 2016;

Offshore and onshore wind power, Solar power and biogas capacities as well as battery storage and hydrogen (P2G) storage capacity are chosen endogenousely, while hydroelectricity lake and run-of-river and Phumped hydro storage capacities are chosen exogenousely.

Existing capacities by December 2017 are also entered as lower bound of each capacity, and investment cost for existing capacities has been considered zero.

Linear optimisation using one-hour time step with respect to Investment Cost.

By Behrang SHIRIZADEH -  December 2018
$Offtext
*-------------------------------------------------------------------------------
*                                Defining the sets
*-------------------------------------------------------------------------------
sets     h                                               /0*8759/
         first(h)        'first hour'
         last(h)         'last hour'
         m               'month'                         /1*12/
         tec             'technology'                    /offshore, onshore, pv, river, lake, biogas, gas, phs, battery, methanation/
         gen(tec)        'power plants'                  /offshore, onshore, pv, river, lake, biogas, gas/
         vre(tec)        'variable tecs'                 /offshore, onshore, pv/
         ncomb(tec)      'non-combustible generation'    /offshore, onshore, pv, river, lake, phs, battery/
         comb(tec)       'combustible generation techs'  /biogas, methanation/
         str(tec)        'storage technologies'          /phs, battery, methanation/
         frr(tec)        'technologies for upward FRR'   /lake, phs, battery, gas/
;
first(h) = ord(h)=1;
last(h) = ord(h)=card(h);
alias(h,hh);
*-------------------------------------------------------------------------------
*                                Inputs
*-------------------------------------------------------------------------------
parameter month(h) 'Production profiles of VRE'
/
$ondelim
$include  inputs/month.csv
$offdelim
/;
parameter load_factor(vre,h) 'Production profiles of VRE'
/
$ondelim
$include  inputs/vre_profiles2006.csv
$offdelim
/;
parameter demand(h) 'demand profile in each hour in GW'
/
$ondelim
$include inputs/demand2050_ademe.csv
$offdelim
/;
Parameter lake_inflows(m) 'monthly lake inflows in GWh'
/
$ondelim
$include  inputs/lake_inflows.csv
$offdelim
/ ;
Parameter river(h) 'hourly run-of-river CF profile'
/
$ondelim
$include  inputs/run_of_river.csv
$offdelim
/ ;
parameter epsilon(vre) 'additional FRR requirement for variable renewable energies because of forecast errors'
/
$ondelim
$include  inputs/reserve_requirements.csv
$offdelim
/ ;
parameter capa_ex(tec) 'existing capacities of the technologies by December 2017 in GW'
/
$ondelim
$include  inputs/existing_capas.csv
$offdelim
/ ;
parameter capa_max(tec) 'maximum capacities of the technologies in GW'
/
$ondelim
$include  inputs/max_capas.csv
$offdelim
/ ;
parameter capex(tec) 'annualized power capex cost in M€/GW/year'
/
$ondelim
$include  inputs/annuities.csv
$offdelim
/ ;
parameter capex_en(str) 'annualized energy capex cost of storage technologies in M€/GWh/year'
/
$ondelim
$include  inputs/str_annuities.csv
$offdelim
/ ;
parameter fOM(tec) 'annualized fixed operation and maintenance costs M€/GW/year'
/
$ondelim
$include  inputs/fO&M.csv
$offdelim
/ ;
Parameter vOM(tec) 'Variable operation and maintenance costs in M€/GWh'
/
$ondelim
$include  inputs/vO&M.csv
$offdelim
/ ;

parameter fixed_costs(tec) 'yearly fixed cost of each tec in M€/GW/year' ;
fixed_costs(tec) = capex(tec) + fOM(tec);
parameter s_capex(str) 'charging related annuity of storage in M€/GW/year' /PHS 0, battery 0, methanation 84.16086/;
parameter s_opex(str)    'charging related fOM of storage in M€/GW/year'   /PHS 0, battery 0, methanation 59.25/;
parameter eta_in(str) 'charging efifciency of storage technologies' /PHS 0.95, battery 0.9, methanation 0.59/;
parameter eta_out(str) 'discharging efficiency of storage technolgoies' /PHS 0.9, battery 0.95, methanation 0.45/;
scalar pump_capa 'pumping capacity in GW' /9.3/;
scalar max_phs 'maximum volume of energy can be stored in PHS reservoir in TWh' /0.18/;
scalar max_biogas 'maxium energy can be generated by biogas in TWh' /15/;
scalar load_uncertainty 'uncertainty coefficient for hourly demand' /0.01/;
scalar delta 'load variation factor'     /0.1/;
*-------------------------------------------------------------------------------
*                                Model
*-------------------------------------------------------------------------------
variables        GENE(tec,h)     'hourly energy generation in TWh'
                 CAPA(tec)       'overal yearly installed capacity in GW'
                 STORAGE(str,h)  'hourly electricity input of battery storage GW'
                 S(str)          'charging power capacity of each storage technology'
                 STORED(str,h)   'energy stored in each storage technology in GWh'
                 CAPACITY(str)   'energy volume of storage technologies in GWh'
                 RSV(frr,h)      'required upward frequency restoration reserve in GW'
                 COST            'final investment cost in b€'

positive variables GENE(tec,h),CAPA(tec),STORAGE(str,h), S(str),STORED(str,h),CAPACITY(str), RSV(frr,h);

equations        gene_vre        'variables renewable profiles generation'
                 gene_capa       'capacity and genration relation for technologies'
                 combustion      'the relationship of combustible technologies'
                 capa_frr        'capacity needed for the secondary reserve requirements'
                 storing         'the definition of stored energy in the storage options'
                 storage_const   'storage in the first hour is equal to the storage in the last hour'
                 lake_res        'constraint on water for lake reservoirs'
                 stored_cap      'maximum energy that is stored in storage units'
                 storage_capa1   'the capacity with hourly charging relationship of storage'
                 storage_capa2   'storage power limit'
                 biogas_const    'maximum energy can be produced by biogas'
                 reserves        'FRR requirement'
                 adequacy        'supply/demand relation'
                 obj             'the final objective function which is COST';

gene_vre(vre,h)..                GENE(vre,h)             =l=     CAPA(vre)*load_factor(vre,h);
gene_capa(tec,h)..               CAPA(tec)               =g=     GENE(tec,h);
combustion(h)..                  GENE('gas',h)           =e=     GENE('biogas',h)+ GENE('methanation',h);
capa_frr(frr,h)..                CAPA(frr)               =g=     GENE(frr,h) + RSV(frr,h);
storing(h,h+1,str)..             STORED(str,h+1)         =e=     STORED(str,h) + STORAGE(str,h)*eta_in(str) - GENE(str,h)/eta_out(str);
storage_const(str,first,last)..  STORED(str,first)       =e=     STORED(str,last) + STORAGE(str,last)*eta_in(str) - GENE(str,last)/eta_out(str);
lake_res(m)..                    lake_inflows(m)         =g=     sum(h$(month(h) = ord(m)),GENE('lake',h))/1000;
stored_cap(str,h)..              STORED(str,h)           =l=     CAPACITY(str);
storage_capa1(str,h)..           S(str)                  =g=     STORAGE(str,h);
storage_capa2(str)..             S(str)                  =l=     CAPA(str);
biogas_const..                   sum(h,GENE('biogas',h)) =l=     max_biogas*1000;
reserves(h)..                    sum(frr, RSV(frr,h))    =e=     sum(vre,epsilon(vre)*CAPA(vre))+ demand(h)*load_uncertainty*(1+delta);
adequacy(h)..                    sum(ncomb,GENE(ncomb,h))+GENE('gas',h)    =e=     demand(h) + sum(str,STORAGE(str,h));
obj..                            COST                    =e=     (sum(tec,(CAPA(tec)-capa_ex(tec))*capex(tec))+ sum(str,CAPACITY(str)*capex_en(str))+sum(tec,(CAPA(tec)*fOM(tec)))+ sum(str,S(str)*(s_capex(str)+s_opex(str))) + sum((tec,h),GENE(tec,h)*vOM(tec)))/1000;
*-------------------------------------------------------------------------------
*                                Initial and fixed values
*-------------------------------------------------------------------------------
CAPA.fx('phs') = pump_capa;
CAPA.fx('river')= capa_ex('river');
CAPA.fx('lake') = 13;
S.fx('phs') = pump_capa;
CAPACITY.fx('phs') = max_phs*1000;
CAPA.up(vre) = capa_max(vre);
GENE.up('river',h) = capa_ex('river')*river(h);
*-------------------------------------------------------------------------------
*                                Model options
*-------------------------------------------------------------------------------
model EOLES /all/;
*-------------------------------------------------------------------------------
option solvelink=0;
option RESLIM = 1000000;
option lp=CPLEX;
option Savepoint=1;
option solveopt = replace;
option limcol = 0;
option limrow = 0;
option SOLPRINT = OFF;
*-------------------------------------------------------------------------------
*                                Solve statement
*-------------------------------------------------------------------------------
$If exist EOLES_p.gdx execute_loadpoint 'EOLES_p';
Solve EOLES using lp minimizing COST;
*-------------------------------------------------------------------------------
*                                Display statement
*-------------------------------------------------------------------------------
parameter sumdemand      'the whole demand per year in TWh';
sumdemand =  sum(h,demand(h))/1000;
parameter gene_tec(tec) 'Overall yearly energy generated by the technology in TWh';
gene_tec(tec) = sum(h,GENE.l(tec,h))/1000;
parameter sumgene        'the whole generation per year in TWh';
sumgene = sum((gen,h),GENE.l(gen,h))/1000 - gene_tec('gas');
Parameter lcoe(gen);
lcoe(gen) = (CAPA.l(gen)*(fOM(gen)+capex(gen))+ gene_tec(gen)*vOM(gen)*1000)/gene_tec(gen);
parameter lcoe_sys1;
lcoe_sys1 = cost.l*1000/sumgene;
parameter lcoe_sys2;
lcoe_sys2 = cost.l*1000/sumdemand;
parameter lcos(str);
lcos(str) = (CAPA.l(str)*(fOM(str)+capex(str))+ gene_tec(str)*vOM(str)*1000 + S.l(str)*(s_capex(str)+s_opex(str))+ CAPACITY.l(str)*capex_en(str))/gene_tec(str);
parameter cf(gen) 'load factor of generation technologies';
cf(gen) = gene_tec(gen)*1000/(8760*CAPA.l(gen));
parameter str_loss 'yearly storage related loss in % of power production';
str_loss = (sum((str,h),STORAGE.l(str,h))-sum(str,gene_tec(str)*1000))/(sumgene*10);
parameter lc 'load curtailment of the network';
lc = ((sumgene - sumdemand)*100/sumgene) - str_loss;
parameter spot_price(h) 'marginal cost'    ;
spot_price(h) = 1000000*adequacy.m(h);
parameter marginal_cost 'average value over the year of spot price in €/MWh';
marginal_cost = sum(h,spot_price(h))/8760;
parameter gas_price(h) 'the dual for the biogas constraint' ;
gas_price(h) = 1000000*combustion.m(h);
*-------------------------------------------------------------------------------
display cost.l;
display capa.l;
display sumdemand;
display sumgene;
display gene_tec;
display lcoe;
display lcoe_sys1;
display lcoe_sys2;
display lcos;
display CAPACITY.l;
display cf;
display lc;
display str_loss;
display marginal_cost;
display S.l;
*-------------------------------------------------------------------------------
*                                Output
*-------------------------------------------------------------------------------
$Ontext
two main output files;
The .txt file just to have a summary and general idea of the key numbers
The .csv file to have a fine output with hourly data for final data processing and analysis
$Offtext
*-------------------------------------------------------------------------------
file results /'outputs/100%RES/2006_LC_internalized.txt'/ ;
*the .txt file
put results;
put '   the main results ' //
//
'I)Overall investment cost is' cost.l 'b€' //
//
'II)the Renewable capacity ' //
'Offshore                'CAPA.l('offshore')'    GW'//
'onsore                  'CAPA.l('onshore')'     GW' //
'PV                      'CAPA.l('PV')'  GW'//
'run of river            'CAPA.l('river') 'GW' //
'lake                    'CAPA.l('lake') 'GW' //
'biogas                  'CAPA.l('biogas')' GW'//
'gas                     'CAPA.l('gas')' GW'//
'Battery                 'CAPA.l('battery')' GW'//
'PHS                     'CAPA.l('phs')' GW'//
'methanation             'CAPA.l('methanation')' GW'//
//
//
'III)Needed storage volume and storage charging power' //
'Battery Storage         'CAPACITY.l('battery')'       GWh' //
'PHS Storage             'CAPACITY.l('phs')'       GWh'//
'methane storage         'CAPACITY.l('methanation')'   GWh'//
'Battery Storage         'S.l('battery')'       GW' //
'PHS Storage             'S.l('phs')'       GW'//
'methane storage         'S.l('methanation')'   GW'//
//
'V)Overall yearly energy generation of each technology'//
'Offshore                'gene_tec('offshore')'    TWh'//
'onsore                  'gene_tec('onshore')'     TWh' //
'PV                      'gene_tec('PV')'  TWh'//
'run of river            'gene_tec('river') 'TWh' //
'lake                    'gene_tec('lake') 'TWh' //
'biogas                  'gene_tec('biogas')' TWh'//
'gas                     'gene_tec('gas')'  TWh'//
'battery                 'gene_tec('battery')' TWh'//
'phs                     'gene_tec('phs')'  TWh'//
'Methanation             'gene_tec('methanation')'TWh'//
//
'VI)more details'//
'LCOE for Offshore               ' lcoe('offshore')' €/MWh'//
'LCOE for Onshore                ' lcoe('onshore')' €/MWh'//
'LCOE for PV                     ' lcoe('pv')' €/MWh'//
'LCOE for Run-of-river           ' lcoe('river')' €/MWh'//
'LCOE for Lake                   ' lcoe('lake')' €/MWh'//
'LCOE for Biogas                 ' lcoe('biogas')' €/MWh'//
'LCOE for Gas                    ' lcoe('gas')' €/MWh'//
'LCOS for battery                ' lcos('battery')' €/MWh'//
'LCOS for pumped storage         ' lcos('phs')' €/MWh'//
'LCOS for methanation            ' lcos('methanation')' €/MWh'//
//
'Load Curtailment' lc '% and the storage loss ' str_loss '%'//
//
'LCOE of the system is 'lcoe_sys1' €/MWh or 'lcoe_sys2' €/MWh '//
//
'Average spot price of the system is ' marginal_cost' €/MWh'//
//
'capacity factors '//
'Offshore                 'cf('offshore')//
'onsore                   'cf('onshore')//
'PV                       'cf('pv') //
'run of river             'cf('river') //
'lake                     'cf('lake') //
'biogas                   'cf('biogas')//
'gas                      'cf('gas')//
//
;
*-------------------------------------------------------------------------------
file hourly_generation /'outputs/100%RES/2006_LC_internalized.csv' / ;
parameter nSTORAGE(str,h);
nSTORAGE(str,h) = 0 - STORAGE.l(str,h);
put hourly_generation;
hourly_generation.pc=5;
hourly_generation.pw=3000;
put 'hour'; loop(tec, put tec.tl;); put 'demand' , 'Pump' , 'ElecStr' , 'CH4' ,'Bat_SOC','PHS_SOC', 'CH4_SOC', 'elec_price','gas_price'/ ;
loop (h,
put h.tl; loop(tec,  put gene.l(tec,h);) put demand(h), nSTORAGE('PHS',h), nSTORAGE('battery',h), nSTORAGE('methanation',h),STORED.l('battery',h),STORED.l('phs',h),STORED.l('methanation',h), spot_price(h),gas_price(h)/
;);
$ontext
file lagrange /'outputs/100%RES/Lagrange2006noRSV.csv'/;
put lagrange;
lagrange.pc=5;
lagrange.nd=20;
lagrange.pw=3000;
put 'hour', 'lambda','combustion', loop(tec, put tec.tl, tec.tl;); loop(vre, put vre.tl;); loop(str, put str.tl, str.tl, str.tl, str.tl;); put 'biogas_contraint' /;
loop(h,
put h.tl, adequacy.m(h), combustion.m(h),loop(tec, put GENE.m(tec,h),gene_capa.m(tec,h););loop(vre, put gene_vre.m(vre,h);); loop(str, put STORAGE.m(str,h),STORED.m(str,h),stored_cap.m(str,h), storage_capa1.m(str,h);); put biogas_const.m/
;);
file lagrangelake /'outputs/100%RES/Lagrange2006lakenoRSV.csv'/;
put lagrangelake;
lagrangelake.pc=5;
lagrangelake.nd=20;
lagrangelake.pw=3000;
put 'month', 'lake_res' /;
loop(m,
put m.tl, lake_res.m(m)/;
);
$offtext
*-------------------------------------------------------------------------------
*                                The End :D
*-------------------------------------------------------------------------------
